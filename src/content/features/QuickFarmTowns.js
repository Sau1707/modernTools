// QuickFarmTowns:
// https://it.forum.grepolis.com/index.php?threads/script-quickfarmtown.24840/
// Adds quick action buttons to farm towns on the island view

window.initQuickFarmTowns = function () {
    const uw = window;
    const $ = uw.$;

    const css = `
    a.button.disabled .middle {
        background-position: -14px -184px;
    }
    a.button.disabled .left {
        background-position: left -115px;
    }
    a.button.disabled .right {
        background-position: right -46px;
    }

    div.island_info_wrapper .island_info_left .game_list {
        height: 365px !important;
    }

    div.island_info_wrapper .island_info_right .game_list {
        height: 365px !important;
    }

    #farm_town_overview_btn {
        top: 51px !important;
    }

    #island_towns_controls {
    }
    }
    `
    var style = $('<style>').html(css);
    $('head').append(style);

    function addButtons() {
        const classAttr = $(this).attr('class');
        let id = classAttr.match(/farm_town_el_([0-9]+)/);
        if (!id.length) return;
        id = id[1]

        const player_relation_models = uw.MM.getOnlyCollectionByName('FarmTownPlayerRelation').models;
        const farm_town_models = uw.MM.getOnlyCollectionByName('FarmTown').models;


        const player_relation = player_relation_models.find(function (model) {
            return model.attributes.farm_town_id == id;
        });
        const farm_town = farm_town_models.find(function (model) {
            return model.attributes.id == id;
        });
        // TODO: if expansion_stage == 0, gray trade button
        // TODO: if expansion_at, gray expansion button
        console.log(player_relation)

        // Create the first button
        var $trade = $('<a>', {
            class: 'button',
            href: '#',
            css: {
                position: 'absolute',
                top: '3px',
                right: '3px'
            }
        }).append($('<span>', { class: 'left' }).append($('<span>', { class: 'right' }).append($('<span>', { class: 'middle mid', css: { minWidth: '26px' } }).append($('<span>', { class: 'img_trade', css: { width: '27px', height: '27px', top: '-3px', float: 'left', position: 'relative', background: 'url("https://flasktools.altervista.org/images/cjq6d72qk521ig1zz.png") no-repeat' } })))));

        // Create the second button
        var $upgrade = $('<a>', {
            class: 'button',
            href: '#',
            css: {
                position: 'absolute',
                top: '3px',
                right: '47px'
            }
        }).append($('<span>', { class: 'left' }).append($('<span>', { class: 'right' }).append($('<span>', { class: 'middle mid', css: { minWidth: '26px' } }).append($('<span>', { class: 'img_trade', css: { width: '27px', height: '27px', top: '-3px', float: 'left', position: 'relative', background: 'url("https://gpit.innogamescdn.com/images/game/autogenerated/battle_point_villages/battle_point_villages_e6b65fc.png") no-repeat -895px -313px' } })))));

        // Append buttons to the current element
        $(this).append($trade, $upgrade);

        function handleUpgrade(e) {
            const town = uw.ITowns.getCurrentTown()

            if (player_relation.attributes.relation_status === 0) {
                unlockRural(town.id, id, player_relation.id)
                return;
            }

            // Upgrade and disabble the button
            upgradeRural(town.id, id, player_relation.id)
            $upgrade.addClass("disabled")
            $upgrade.off('click', handleUpgrade);
        }

        // If there is current an expansion, disable the button
        if (player_relation.attributes.expansion_at !== null) {
            $upgrade.addClass("disabled")
        } else {
            $upgrade.on("click", handleUpgrade)
        }

        function handleTrade(e) {
            const town = uw.ITowns.getCurrentTown()
            const resources = town.resources()
            const capacity = town.getAvailableTradeCapacity()
            const resouce = farm_town.attributes.resource_demand
            const count = capacity > resources[resouce] ? resources[resouce] : capacity
            tradeRural(town.id, id, player_relation.id, count)
        }

        const town = uw.ITowns.getCurrentTown()
        const killpoints = uw.MM.getModelByNameAndPlayerId('PlayerKillpoints').attributes;
        const available = killpoints.att + killpoints.def - killpoints.used;
        //  upgrade_cost
        if (town.getAvailableTradeCapacity() < 100 || available < player_relation.attributes.upgrade_cost) {
            $trade.addClass("disabled")
        } else {
            $trade.on("click", handleTrade)
        }
    }

    function unlockRural(town_id, farm_town_id, relation_id) {
        let data = {
            model_url: `FarmTownPlayerRelation/${relation_id}`,
            action_name: 'unlock',
            arguments: {
                farm_town_id: farm_town_id,
            },
            town_id: town_id,
        };
        uw.gpAjax.ajaxPost('frontend_bridge', 'execute', data);
    };

    function upgradeRural(town_id, farm_town_id, relation_id) {
        let data = {
            model_url: `FarmTownPlayerRelation/${relation_id}`,
            action_name: 'upgrade',
            arguments: {
                farm_town_id: farm_town_id,
            },
            town_id: town_id,
        };
        uw.gpAjax.ajaxPost('frontend_bridge', 'execute', data);
    };

    function tradeRural(town_id, farm_town_id, relation_id, count) {
        if (count < 100) return;
        const data = {
            model_url: `FarmTownPlayerRelation/${relation_id}`,
            action_name: 'trade',
            arguments: { farm_town_id: farm_town_id, amount: count > 3000 ? 3000 : count },
            town_id: town_id,
        };
        uw.gpAjax.ajaxPost('frontend_bridge', 'execute', data);
    };

    /* Add the buttons when the window open */
    $.Observer(uw.GameEvents.window.open).subscribe("quick_rurals", (event, island) => {
        if (island.context !== "island") return;
        const { wnd } = island

        const interval = setInterval(() => {
            const $el = $(`#gpwnd_${wnd.getID()} [class*='farm_town_el_']`);
            if (!$el.length) return;
            clearInterval(interval)
            $el.each(addButtons)
        }, 50)
    });
}


window.initQuickFarmTowns();
